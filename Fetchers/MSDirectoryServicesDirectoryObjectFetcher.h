/*******************************************************************************
**NOTE** This code was generated by a tool and will occasionally be
overwritten. We welcome comments and issues regarding this code; they will be
addressed in the generation tool. If you wish to submit pull requests, please
do so for the templates in that tool.

This code was generated by Vipr (https://github.com/microsoft/vipr) using
the T4TemplateWriter (https://github.com/msopentech/vipr-t4templatewriter).

Copyright (c) Microsoft Open Technologies, Inc. All Rights Reserved.
Licensed under the Apache License 2.0; see LICENSE in the source repository
root for authoritative license information.ï»¿
******************************************************************************/



#ifndef MSDIRECTORYSERVICESDIRECTORYOBJECTFETCHER_H
#define MSDIRECTORYSERVICESDIRECTORYOBJECTFETCHER_H

#import "MSDirectoryServicesModels.h"
#import "api/api.h"
#import "core/core.h"
#import "core/MSOrcEntityFetcher.h"

@class MSDirectoryServicesApplicationFetcher;	
@class MSDirectoryServicesUserFetcher;	
@class MSDirectoryServicesExtensionPropertyFetcher;	
@class MSDirectoryServicesContactFetcher;	
@class MSDirectoryServicesDeviceFetcher;	
@class MSDirectoryServicesDeviceConfigurationFetcher;	
@class MSDirectoryServicesDirectoryLinkChangeFetcher;	
@class MSDirectoryServicesAppRoleAssignmentFetcher;	
@class MSDirectoryServicesGroupFetcher;	
@class MSDirectoryServicesDirectoryRoleFetcher;	
@class MSDirectoryServicesDirectoryRoleTemplateFetcher;	
@class MSDirectoryServicesServicePrincipalFetcher;	
@class MSDirectoryServicesTenantDetailFetcher;	
@class MSDirectoryServicesDirectoryObjectFetcher;
@class MSDirectoryServicesDirectoryObjectOperations;


/** MSDirectoryServicesDirectoryObjectFetcher
 *
 */
@interface MSDirectoryServicesDirectoryObjectFetcher : MSOrcEntityFetcher

@property (copy, nonatomic, readonly) MSDirectoryServicesDirectoryObjectOperations *operations;

- (instancetype)initWithUrl:(NSString*)urlComponent parent:(id<MSOrcExecutable>)parent;
- (void)readWithCallback:(void (^)(MSDirectoryServicesDirectoryObject *, MSOrcError *))callback;
- (void)update:(MSDirectoryServicesDirectoryObject *)DirectoryObject callback:(void (^)(MSDirectoryServicesDirectoryObject *, MSOrcError*))callback ;
- (void)delete:(void(^)(int status, MSOrcError *))callback;
- (MSDirectoryServicesDirectoryObjectFetcher *)addCustomParametersWithName:(NSString *)name value:(id)value;
- (MSDirectoryServicesDirectoryObjectFetcher *)addCustomHeaderWithName:(NSString *)name value:(NSString *)value;
- (MSDirectoryServicesDirectoryObjectFetcher *)select:(NSString *)params;
- (MSDirectoryServicesDirectoryObjectFetcher *)expand:(NSString *)value;

@property (strong, nonatomic, readonly, getter=createdOnBehalfOf) MSDirectoryServicesDirectoryObjectFetcher *createdOnBehalfOf;
@property (strong, nonatomic, readonly, getter=createdObjects) MSDirectoryServicesDirectoryObjectCollectionFetcher *createdObjects;

- (MSDirectoryServicesDirectoryObjectFetcher *)createdObjectsById:(id)identifier;


@property (strong, nonatomic, readonly, getter=manager) MSDirectoryServicesDirectoryObjectFetcher *manager;
@property (strong, nonatomic, readonly, getter=directReports) MSDirectoryServicesDirectoryObjectCollectionFetcher *directReports;

- (MSDirectoryServicesDirectoryObjectFetcher *)directReportsById:(id)identifier;

@property (strong, nonatomic, readonly, getter=members) MSDirectoryServicesDirectoryObjectCollectionFetcher *members;

- (MSDirectoryServicesDirectoryObjectFetcher *)membersById:(id)identifier;

@property (strong, nonatomic, readonly, getter=memberOf) MSDirectoryServicesDirectoryObjectCollectionFetcher *memberOf;

- (MSDirectoryServicesDirectoryObjectFetcher *)memberOfById:(id)identifier;

@property (strong, nonatomic, readonly, getter=owners) MSDirectoryServicesDirectoryObjectCollectionFetcher *owners;

- (MSDirectoryServicesDirectoryObjectFetcher *)ownersById:(id)identifier;

@property (strong, nonatomic, readonly, getter=ownedObjects) MSDirectoryServicesDirectoryObjectCollectionFetcher *ownedObjects;

- (MSDirectoryServicesDirectoryObjectFetcher *)ownedObjectsById:(id)identifier;

- (MSDirectoryServicesApplicationFetcher *)asApplication;	
- (MSDirectoryServicesUserFetcher *)asUser;	
- (MSDirectoryServicesExtensionPropertyFetcher *)asExtensionProperty;	
- (MSDirectoryServicesContactFetcher *)asContact;	
- (MSDirectoryServicesDeviceFetcher *)asDevice;	
- (MSDirectoryServicesDeviceConfigurationFetcher *)asDeviceConfiguration;	
- (MSDirectoryServicesDirectoryLinkChangeFetcher *)asDirectoryLinkChange;	
- (MSDirectoryServicesAppRoleAssignmentFetcher *)asAppRoleAssignment;	
- (MSDirectoryServicesGroupFetcher *)asGroup;	
- (MSDirectoryServicesDirectoryRoleFetcher *)asDirectoryRole;	
- (MSDirectoryServicesDirectoryRoleTemplateFetcher *)asDirectoryRoleTemplate;	
- (MSDirectoryServicesServicePrincipalFetcher *)asServicePrincipal;	
- (MSDirectoryServicesTenantDetailFetcher *)asTenantDetail;	

@end

#endif
